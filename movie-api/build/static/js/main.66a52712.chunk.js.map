{"version":3,"sources":["components/mainScreen.js","components/movieDetails.js","components/movieCard.js","components/RatingComponent.js","components/movieModal.js","App.js","serviceWorker.js","index.js"],"names":["btnStyle","position","right","bottom","zIndex","border","color","fontWeight","MainScreen","props","useState","page","setPage","movieData","setMovieData","showModal","setShowModal","fetchPage","pageNum","fetch","then","result","json","data","results","catch","err","console","log","useEffect","length","className","style","type","onClick","MovieModal","show","hideModal","history","map","movie","MovieCard","key","id","MovieDetails","fetchMovie","Object","keys","match","params","title","release_date","original_language","overview","backdrop_path","vote_average","popularity","production_companies","poster_path","slice","src","alt","fontSize","i","name","RatingComponent","ratingStyle","width","height","borderBottomLeftRadius","textAlign","display","justifyContent","alignContent","flexDirection","backgroundColor","linkStyle","textDecoration","linkStyleHover","hover","setHover","handleHover","to","onMouseEnter","onMouseLeave","toUpperCase","rating","setRating","token","JSON","parse","localStorage","getItem","guest_session_id","cache","resp","movieList","filter","starRatedColor","changeRating","newRating","method","mode","credentials","headers","redirect","referrer","body","stringify","value","error","numberOfStars","starDimension","starSpacing","res","text","modalStyle","top","left","background","modalMainStyle","transform","getRandomInt","min","max","Math","ceil","floor","random","genres","setGenres","choice","setChoice","showHideClassName","handleChange","target","genre","total_pages","rndPage","rndIndex","push","App","fetchGuestToken","setItem","dateString","expires_at","Date","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66a52712.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MovieCard, MovieModal } from \"./\";\r\n\r\nconst btnStyle = {\r\n  position: \"fixed\",\r\n  right: \"10px\",\r\n  bottom: \"10px\",\r\n  zIndex: \"1\",\r\n  border: \"10px solid black\",\r\n  color: \"black\",\r\n  fontWeight: \"bold\"\r\n};\r\n\r\nfunction MainScreen(props) {\r\n  const [page, setPage] = useState(1);\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  \r\n  function hideModal() {\r\n    setShowModal(() => false);\r\n  }\r\n  function displayModal() {\r\n    setShowModal(() => true);\r\n  }\r\n  const handlePage = () => {\r\n    fetchPage(page + 1);\r\n  };\r\n\r\n  const fetchPage = pageNum =>\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/top_rated?api_key=f57efe1486f26a1000ecc7f73ebf0005&language=en-US&page=\" +\r\n        pageNum\r\n    )\r\n      .then(result => {\r\n        return result.json();\r\n      })\r\n      .then(data => {\r\n        setMovieData(movieData => [...movieData, ...data.results]);\r\n        setPage(page => page + 1);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n  useEffect(() => {\r\n    if (!movieData.length) fetchPage(page);\r\n  });\r\n  return movieData.length ? (\r\n    <div className=\"text-center\">\r\n      <button\r\n        className=\"btn btn-warning \"\r\n        style={btnStyle}\r\n        type=\"button\"\r\n        onClick={displayModal}\r\n      >\r\n        RANDOM\r\n      </button>\r\n      <MovieModal\r\n        show={showModal}\r\n        hideModal={hideModal}\r\n        history={props.history}\r\n      ></MovieModal>\r\n      <div className=\"row\">\r\n        {movieData.map(movie => (\r\n          <MovieCard key={movie.id} movie={movie}></MovieCard>\r\n        ))}\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-dark my-5 \" onClick={handlePage}>\r\n        Load more . . .\r\n      </button>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n}\r\nexport { MainScreen };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RatingComponent } from \"./\";\r\nfunction MovieDetails(props) {\r\n  const [movie, fetchMovie] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(movie).length === 0)\r\n      fetch(\r\n        \"https://api.themoviedb.org/3/movie/\" +\r\n          props.match.params.id +\r\n          \"?api_key=f57efe1486f26a1000ecc7f73ebf0005&language=en-US\"\r\n      )\r\n        .then(result => {\r\n          return result.json();\r\n        })\r\n        .then(data => {\r\n          fetchMovie(() => data);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n  });\r\n\r\n  let {\r\n    title,\r\n    release_date,\r\n    original_language,\r\n    overview,\r\n    backdrop_path,\r\n    vote_average,\r\n    popularity,\r\n    production_companies,\r\n    id,\r\n    poster_path\r\n  } = movie;\r\n  return Object.keys(movie).length === 0 ? (\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <div className=\"\">\r\n      <h1>\r\n        {title} ({release_date.slice(0, 4)})\r\n      </h1>\r\n      <object\r\n        data={\"https://image.tmdb.org/t/p/w500\" + backdrop_path}\r\n        className=\"w-100\"\r\n        type=\"image/png\"\r\n      >\r\n        <img\r\n          src={\"https://image.tmdb.org/t/p/w500\" + poster_path}\r\n          className=\"w-100\"\r\n          alt=\"...\"\r\n        />\r\n      </object>\r\n\r\n      <p style={{ fontWeight: \"strong\", fontSize: \"20px\" }}>\r\n        Rating: {vote_average} <br />\r\n        Popularity: {popularity} <br />\r\n        Language: {original_language} <br />\r\n        Production companies:{\" \"}\r\n        {production_companies.map(({ name }, i) =>\r\n          i === production_companies.length - 1 ? name : name + \", \"\r\n        )}\r\n      </p>\r\n\r\n      <div>{overview}</div>\r\n      <RatingComponent vote_average={vote_average} id={id}></RatingComponent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { MovieDetails };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ratingStyle = {\r\n  width: \"80px\",\r\n  height: \"80px\",\r\n  borderBottomLeftRadius: \"50px\",\r\n  textAlign: \"center\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignContent: \"center\",\r\n  flexDirection: \"column\",\r\n  position: \"absolute\",\r\n  right: \"0\",\r\n  backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  fontSize: \"30px\",\r\n  fontWeight: \"bold\"\r\n};\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"black\"\r\n};\r\nconst linkStyleHover = {\r\n  textDecoration: \"none\",\r\n  color: \"#606060\"\r\n};\r\nfunction MovieCard({ movie }) {\r\n  const [hover, setHover] = useState(false);\r\n  useEffect(() => {});\r\n  function handleHover() {\r\n    setHover(hover => !hover);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"col col-12  col-md-6 col-lg-4 col-xl-3 \" + (hover ? \"p-2\" : \"p-1\")\r\n      }\r\n    >\r\n      <Link\r\n        to={\"/movie/\" + movie.id}\r\n        style={hover ? linkStyleHover : linkStyle}\r\n      >\r\n        <div\r\n          className=\"card h-100 \"\r\n          onMouseEnter={handleHover}\r\n          onMouseLeave={handleHover}\r\n        >\r\n          <img\r\n            src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path}\r\n            className=\"card-img-top rounded-0\"\r\n            alt=\"...\"\r\n          ></img>\r\n          <div className=\"\" style={ratingStyle}>\r\n            {movie.vote_average}\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              {movie.title} ({movie.release_date.slice(0, 4)})\r\n            </h5>\r\n            <p className=\"card-text\">\r\n              Language: {movie.original_language.toUpperCase()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nexport { MovieCard };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nfunction RatingComponent({ vote_average, id }) {\r\n  const [rating, setRating] = useState(0);\r\n  let token = JSON.parse(localStorage.getItem(\"guestToken\"));\r\n\r\n  function deleteRating() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/\" +\r\n        id +\r\n        \"/rating?api_key=f57efe1486f26a1000ecc7f73ebf0005&guest_session_id=\" +\r\n        token.guest_session_id,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n      }\r\n    )\r\n      .then(res => res.text())\r\n      .then(() => {\r\n        setRating(() => 0);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleChange(newRating) {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/\" +\r\n        id +\r\n        \"/rating?api_key=f57efe1486f26a1000ecc7f73ebf0005&guest_session_id=\" +\r\n        token.guest_session_id,\r\n      {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, *cors, same-origin\r\n        cache: \"no-store\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, *same-origin, omit\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrer: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify({\r\n          value: newRating\r\n        }) // body data type must match \"Content-Type\" header\r\n      }\r\n    )\r\n      .then(() => {\r\n        setRating(() => newRating);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function loadInitial() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/guest_session/\" +\r\n        token.guest_session_id +\r\n        \"/rated/movies?api_key=f57efe1486f26a1000ecc7f73ebf0005\",\r\n      { cache: \"no-store\" }\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        let movieList = [...data.results.filter(movie => movie.id === id)];\r\n        if (movieList.length) setRating(movieList[0].rating);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  useEffect(() => {\r\n    if (rating === 0) {\r\n      loadInitial();\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"py-5\">\r\n      <StarRatings\r\n        rating={rating}\r\n        starRatedColor=\"red\"\r\n        changeRating={handleChange}\r\n        numberOfStars={10}\r\n        name=\"rating\"\r\n        starDimension=\"25px\"\r\n        starSpacing=\"2px\"\r\n      ></StarRatings>\r\n      <bR></bR>\r\n      <button className=\"btn btn-danger my-5\" onClick={deleteRating}>\r\n        Delete rating\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport { RatingComponent };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst modalStyle = {\r\n  position: \"fixed\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  background: \"rgba(0, 0, 0, 0.6)\"\r\n};\r\n\r\nconst modalMainStyle = {\r\n  position: \"fixed\",\r\n  background: \"white\",\r\n  width: \"80%\",\r\n  height: \"auto\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction MovieModal({ show, hideModal, history }) {\r\n  const [genres, setGenres] = useState([]);\r\n  const [choice, setChoice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!genres.length) {\r\n      fetch(\r\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=f57efe1486f26a1000ecc7f73ebf0005&language=en-US\"\r\n      )\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n          setGenres(data.genres);\r\n        });\r\n    }\r\n  });\r\n\r\n  const showHideClassName = show ? \"modal d-block\" : \"modal d-none\";\r\n\r\n  function handleChange({ target }) {\r\n    setChoice(() => target.id);\r\n  }\r\n\r\n  function handleSubmit() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/discover/movie?api_key=f57efe1486f26a1000ecc7f73ebf0005&language=en-US&include_adult=false&include_video=false&page=1&with_genres=\" +\r\n        choice\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(({ total_pages, results }) => {\r\n        let rndPage = getRandomInt(1, total_pages);\r\n        let rndIndex = getRandomInt(0, 19);\r\n        fetch(\r\n          \"https://api.themoviedb.org/3/discover/movie?api_key=f57efe1486f26a1000ecc7f73ebf0005&language=en-US&include_adult=false&include_video=false&page=\" +\r\n            rndPage +\r\n            \"&with_genres=\" +\r\n            choice\r\n        )\r\n          .then(resp => resp.json())\r\n          .then(({ results }) => {\r\n            history.push(\"/movie/\" + results[rndIndex].id);\r\n          });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={showHideClassName} style={modalStyle}>\r\n      <section className=\"modal-main p-2\" style={modalMainStyle}>\r\n        <button\r\n          className=\"btn btn-danger d-block ml-auto\"\r\n          type=\"button\"\r\n          onClick={hideModal}\r\n        >\r\n          CLOSE\r\n        </button>\r\n        <h1>Pick a genre</h1>\r\n\r\n        <div>\r\n          <ul className=\"list-unstyled text-left d-inline-block\">\r\n            {genres.map(genre => (\r\n              <li key={genre.id}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"genre\"\r\n                  value={genre.name}\r\n                  onClick={handleChange}\r\n                  id={genre.id}\r\n                />{\" \"}\r\n                {genre.name} <br />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSubmit}\r\n          className=\"btn btn-success \"\r\n        >\r\n          Submit\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nexport { MovieModal };\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { MovieDetails, MainScreen } from \"./components\";\n\nfunction App() {\n \n  let fetchGuestToken = () => {\n    fetch(\n      \"https://api.themoviedb.org/3/authentication/guest_session/new?api_key=f57efe1486f26a1000ecc7f73ebf0005\"\n    )\n      .then(resp => {\n        return resp.json();\n      })\n      .then(data => {\n        console.log(\"New guest token fetched\");\n        localStorage.setItem(\"guestToken\", JSON.stringify(data));\n      });\n  };\n\n  useEffect(() => {\n    let token = JSON.parse(localStorage.getItem(\"guestToken\"));\n    if (token) {\n      let dateString = token.expires_at;\n      let expireDate = new Date(dateString);\n      let currDate = new Date();\n      if (expireDate < currDate) {\n        fetchGuestToken();\n      }\n    } else {\n      fetchGuestToken();\n    }\n  });\n  return (\n    <BrowserRouter>\n      <main className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={MainScreen} />\n          <Route exact path=\"/movie/:id\" component={MovieDetails} />\n          <Route path=\"/*\" component={MainScreen} />\n        </Switch>\n      </main>\n\n      <footer>\n        <div className=\"container text-center\">\n          This is a Cobe job application app &copy;{\" \"}\n        </div>{\" \"}\n      </footer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}